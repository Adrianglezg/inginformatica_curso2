$date
	Wed Dec  2 12:07:53 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 1 ! z $end
$var wire 6 " opcode [5:0] $end
$var reg 1 # clk $end
$var reg 3 $ op [2:0] $end
$var reg 1 % reset $end
$var reg 1 & s_abs $end
$var reg 1 ' s_inc $end
$var reg 1 ( s_inm $end
$var reg 1 ) we3 $end
$var reg 1 * wez $end
$scope module MICROC $end
$var wire 1 # clk $end
$var wire 3 + op [2:0] $end
$var wire 1 % reset $end
$var wire 1 & s_abs $end
$var wire 1 ' s_inc $end
$var wire 1 ( s_inm $end
$var wire 1 ) we3 $end
$var wire 1 * wez $end
$var wire 1 ! z $end
$var wire 8 , wd3 [7:0] $end
$var wire 10 - salida_mux_inc [9:0] $end
$var wire 1 . salida_ZALU $end
$var wire 10 / salida_SUM [9:0] $end
$var wire 10 0 salida_PC [9:0] $end
$var wire 16 1 salida_MEMPROG [15:0] $end
$var wire 8 2 salida_ALU [7:0] $end
$var wire 8 3 rd2 [7:0] $end
$var wire 8 4 rd1 [7:0] $end
$var wire 6 5 opcode [5:0] $end
$var wire 10 6 entrada_PC [9:0] $end
$scope module ALU $end
$var wire 3 7 op [2:0] $end
$var wire 8 8 y [7:0] $end
$var wire 1 . zero $end
$var wire 8 9 b [7:0] $end
$var wire 8 : a [7:0] $end
$var reg 8 ; s [7:0] $end
$upscope $end
$scope module FFZ $end
$var wire 1 * carga $end
$var wire 1 # clk $end
$var wire 1 . d $end
$var wire 1 % reset $end
$var reg 1 ! q $end
$upscope $end
$scope module MEMPROG $end
$var wire 1 # clk $end
$var wire 16 < rd [15:0] $end
$var wire 10 = a [9:0] $end
$upscope $end
$scope module PC $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 10 > d [9:0] $end
$var reg 10 ? q [9:0] $end
$upscope $end
$scope module REGFILE $end
$var wire 1 # clk $end
$var wire 4 @ ra1 [3:0] $end
$var wire 4 A ra2 [3:0] $end
$var wire 4 B wa3 [3:0] $end
$var wire 1 ) we3 $end
$var wire 8 C wd3 [7:0] $end
$var wire 8 D rd2 [7:0] $end
$var wire 8 E rd1 [7:0] $end
$upscope $end
$scope module SUM $end
$var wire 10 F b [9:0] $end
$var wire 10 G y [9:0] $end
$var wire 10 H a [9:0] $end
$upscope $end
$scope module mux_abs $end
$var wire 10 I d0 [9:0] $end
$var wire 10 J d1 [9:0] $end
$var wire 1 & s $end
$var wire 10 K y [9:0] $end
$upscope $end
$scope module mux_inc $end
$var wire 10 L d0 [9:0] $end
$var wire 10 M d1 [9:0] $end
$var wire 1 ' s $end
$var wire 10 N y [9:0] $end
$upscope $end
$scope module mux_inm $end
$var wire 8 O d0 [7:0] $end
$var wire 8 P d1 [7:0] $end
$var wire 1 ( s $end
$var wire 8 Q y [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx Q
b10 P
bx O
b0x00x01 N
b1 M
b100101 L
bx K
b100101 J
bx I
b0x00x01 H
bx G
b0 F
b0 E
b0 D
bx C
b101 B
b10 A
b0 @
b0 ?
bx >
b0 =
b100101 <
bx ;
b0 :
b0 9
bx 8
bx 7
bx 6
b0 5
b0 4
b0 3
bx 2
b100101 1
b0 0
bx /
x.
b0x00x01 -
bx ,
bx +
x*
x)
x(
x'
x&
1%
bx $
1#
b0 "
0!
$end
#500
0%
#1500
1.
b10 ,
b10 C
b10 Q
b0 2
b0 8
b0 ;
b0 O
b1 6
b1 >
b1 K
b1 /
b1 G
b1 I
b1 -
b1 H
b1 N
1(
0*
b0 $
b0 +
b0 7
1)
0&
1'
0#
#3000
0.
b10 2
b10 8
b10 ;
b10 O
b1010101 ,
b1010101 C
b1010101 Q
b10 3
b10 9
b10 D
b10 4
b10 :
b10 E
b10 6
b10 >
b10 K
b101 "
b101 5
b1010101 P
b101010011 J
b101010011 L
b11 B
b101 A
b101 @
b10 /
b10 G
b10 I
b1010101010011 1
b1010101010011 <
b1 0
b1 =
b1 ?
b1 F
1#
#4500
b100 ,
b100 C
b100 Q
b100 2
b100 8
b100 ;
b100 O
0#
0(
1*
b10 $
b10 +
b10 7
#6000
1.
b0 ,
b0 C
b0 Q
b0 2
b0 8
b0 ;
b0 O
b0 3
b0 9
b0 D
b0 4
b0 :
b0 E
b11 6
b11 >
b11 K
b0 "
b0 5
b10 P
b101001 J
b101001 L
b1001 B
b10 A
b0 @
b11 /
b11 G
b11 I
b101001 1
b101001 <
b10 0
b10 =
b10 ?
b10 F
1#
#7500
b10 ,
b10 C
b10 Q
0#
1(
0*
b0 $
b0 +
b0 7
#9000
b1 ,
b1 C
b1 Q
b100 6
b100 >
b100 K
b1 P
b11010 J
b11010 L
b1010 B
b1 A
b100 /
b100 G
b100 I
b11010 1
b11010 <
b11 0
b11 =
b11 ?
b11 F
1#
#10500
0#
#12000
0.
b100 2
b100 8
b100 ;
b100 O
b111001 ,
b111001 C
b111001 Q
b10 3
b10 9
b10 D
b100 4
b100 :
b100 E
b101 6
b101 >
b101 K
b1000 "
b1000 5
b111001 P
b1110010011 J
b1110010011 L
b11 B
b1001 A
b11 @
b101 /
b101 G
b101 I
b10001110010011 1
b10001110010011 <
b100 0
b100 =
b100 ?
b100 F
1#
#13500
b10 ,
b10 C
b10 Q
b10 2
b10 8
b10 ;
b10 O
0#
0(
1*
b11 $
b11 +
b11 7
#15000
1.
b0 ,
b0 C
b0 Q
b0 3
b0 9
b0 D
b0 2
b0 8
b0 ;
b0 O
b110 6
b110 >
b110 K
b111110 "
b111110 5
b10000000 P
b1000 J
b1000 L
b1000 B
b0 A
b1000 @
b0 4
b0 :
b0 E
b110 /
b110 G
b110 I
b1111100000001000 1
b1111100000001000 <
b101 0
b101 =
b101 ?
b101 F
1#
#16500
0#
0*
b0 $
b0 +
b0 7
0)
#18000
b1 3
b1 9
b1 D
b111 6
b111 >
b111 K
b101 "
b101 5
b1001010 P
b10100100 J
b10100100 L
b100 B
b1010 A
b100 @
b111 /
b111 G
b111 I
b1010010100100 1
b1010010100100 <
b110 0
b110 =
b110 ?
b110 F
1#
#19500
0.
b1 ,
b1 C
b1 Q
b1 2
b1 8
b1 ;
b1 O
0#
1*
b10 $
b10 +
b10 7
1)
#21000
1.
b0 ,
b0 C
b0 Q
b0 3
b0 9
b0 D
b0 2
b0 8
b0 ;
b0 O
b1000 6
b1000 >
b1000 K
b111101 "
b111101 5
b1111111 P
b1111111101 J
b1111111101 L
b1101 B
b1111 A
b111 @
b0 4
b0 :
b0 E
b1000 /
b1000 G
b1000 I
b1111011111111101 1
b1111011111111101 <
b111 0
b111 =
b111 ?
b111 F
1#
#22500
b100 6
b100 >
b100 K
b100 /
b100 G
b100 I
b1111111101 -
b1111111101 H
b1111111101 N
0#
0*
b0 $
b0 +
b0 7
0)
0'
#24000
0.
b10 ,
b10 C
b10 Q
b10 2
b10 8
b10 ;
b10 O
b1110010011 -
b1110010011 H
b1110010011 N
b10 3
b10 9
b10 D
b10 4
b10 :
b10 E
b1110010111 6
b1110010111 >
b1110010111 K
b1000 "
b1000 5
b111001 P
b1110010011 J
b1110010011 L
b11 B
b1001 A
b11 @
b1110010111 /
b1110010111 G
b1110010111 I
b10001110010011 1
b10001110010011 <
b100 0
b100 =
b100 ?
b100 F
1#
#25500
1.
b0 ,
b0 C
b0 Q
b101 6
b101 >
b101 K
b0 2
b0 8
b0 ;
b0 O
b101 /
b101 G
b101 I
b1 -
b1 H
b1 N
0#
1*
b11 $
b11 +
b11 7
1)
1'
#27000
1.
b0 ,
b0 C
b0 Q
b0 3
b0 9
b0 D
b0 2
b0 8
b0 ;
b0 O
b110 6
b110 >
b110 K
b111110 "
b111110 5
b10000000 P
b1000 J
b1000 L
b1000 B
b0 A
b1000 @
b0 4
b0 :
b0 E
1!
b110 /
b110 G
b110 I
b1111100000001000 1
b1111100000001000 <
b101 0
b101 =
b101 ?
b101 F
1#
#28500
b1000 6
b1000 >
b1000 K
0#
0*
b0 $
b0 +
b0 7
0)
1&
#30000
b111111 "
b111111 5
b11000000 P
b1100 @
b1001 /
b1001 G
b1001 I
b1111110000001000 1
b1111110000001000 <
b1000 0
b1000 =
b1000 ?
b1000 F
1#
#31500
b11000000 ,
b11000000 C
b11000000 Q
b10000 /
b10000 G
b10000 I
b1000 -
b1000 H
b1000 N
0#
1(
0'
#33000
1#
#34500
0#
